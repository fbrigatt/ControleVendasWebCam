package controle.venda.views;

import controle.venda.dao.ClienteDao;
import controle.venda.dao.ImagemDao;
import controle.venda.dao.ProdutoDao;
import controle.venda.model.Cliente;
import controle.venda.model.Imagem;
import controle.venda.model.Produto;
import java.awt.AWTKeyStroke;
import java.awt.Image;
import java.awt.KeyboardFocusManager;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import utilitarios.UpperCaseDocument;

/**
 *
 * @author frede
 */
public class CadastroProdutos extends javax.swing.JDialog {

    /**
     * Creates new form CadastroCliente
     */
    
    private ArrayList<Produto> lista;
    private int posicao_atual = -1;
    private Produto produtoSelecionado;
    private Produto produtoAlterar;
    
    private ProdutoDao produtoDao;
    private ImagemDao imagemDao;
    private Imagem imagem;
    

    public CadastroProdutos() {

        this.produtoDao = new ProdutoDao();
        this.produtoSelecionado = new Produto();
        this.produtoAlterar = produtoSelecionado;
        this.imagemDao = new ImagemDao();
        this.imagem = new Imagem();

        initComponents();
        setModal(true);
        setLocationRelativeTo(null);
        this.jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        btnPrimeiro.setEnabled(false);
        btnAnterior.setEnabled(false);
        btnProximo.setEnabled(false);
        btnUltimo.setEnabled(false);

        jTable1.setEnabled(false);

        // Desabilita a Segunda Aba
        tabProdutos.setEnabledAt(1, false);
        
        // Desabilita a Terceira Aba
        //tabProdutos.setEnabledAt(2, false);
        
        // Deixa a Primeira Aba Selecionada
        tabProdutos.setSelectedIndex(0);
        txfCodBarra.requestFocus();

        // Colocando enter para pular de campo 
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);

        /*     
        Insets in = Toolkit.getDefaultToolkit().getScreenInsets(this.getGraphicsConfiguration());
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int width = d.width - (in.left + in.top);
        int height = d.height - (in.top + in.bottom);
        this.setLocation(0, 0);
        this.setSize(width, height);
         */
        setResizable(false);
        this.addComponentListener(new ComponentAdapter() {
            public void componentMoved(ComponentEvent e) {
                setEnabled(false);
                setEnabled(true);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        lblCadastroClientes = new javax.swing.JLabel();
        tabProdutos = new javax.swing.JTabbedPane();
        abaPesquisa = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButtonListar = new javax.swing.JButton();
        jButtonNovoProduto = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        btnPrimeiro = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnProximo = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txfPesquisar = new javax.swing.JTextField();
        btnPesquisa = new javax.swing.JButton();
        lblImagemGravada = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        abaDadosPessoais = new javax.swing.JPanel();
        lblCpf = new javax.swing.JLabel();
        txfCodBarra = new javax.swing.JTextField();
        txfDescricao = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        txfPreco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblImagemProdutos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de Vendas");

        lblCadastroClientes.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblCadastroClientes.setForeground(new java.awt.Color(255, 0, 0));
        lblCadastroClientes.setText("CADASTRO DE PRODUTOS");

        tabProdutos.setForeground(new java.awt.Color(0, 0, 255));
        tabProdutos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tabProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabProdutosMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jButtonNovoProduto.setText("Novo");
        jButtonNovoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoProdutoActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnPrimeiro.setText("|<");
        btnPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroActionPerformed(evt);
            }
        });

        btnAnterior.setText("<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnProximo.setText(">");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });

        btnUltimo.setText(">|");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar:");

        btnPesquisa.setText("Pesquisar");
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        lblImagemGravada.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CÓD. BARRAS", "DESCRIÇÃO", "PREÇO"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButtonListar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonNovoProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFechar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPrimeiro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAnterior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProximo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUltimo)))
                        .addGap(18, 18, 18)
                        .addComponent(lblImagemGravada, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisa))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnPrimeiro)
                                .addComponent(btnAnterior)
                                .addComponent(btnProximo)
                                .addComponent(btnUltimo))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonListar)
                                .addComponent(jButtonNovoProduto)
                                .addComponent(btnFechar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImagemGravada, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout abaPesquisaLayout = new javax.swing.GroupLayout(abaPesquisa);
        abaPesquisa.setLayout(abaPesquisaLayout);
        abaPesquisaLayout.setHorizontalGroup(
            abaPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        abaPesquisaLayout.setVerticalGroup(
            abaPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        tabProdutos.addTab("Pesquisa", abaPesquisa);

        lblCpf.setText("Cód. Barras:");

        lblNome.setText("Descrição:");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jLabel3.setText("Preço:");

        jButton1.setText("Selecionar Imagem");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout abaDadosPessoaisLayout = new javax.swing.GroupLayout(abaDadosPessoais);
        abaDadosPessoais.setLayout(abaDadosPessoaisLayout);
        abaDadosPessoaisLayout.setHorizontalGroup(
            abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(48, 48, 48)
                        .addComponent(txfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                        .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblCpf))
                        .addGap(18, 18, 18)
                        .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblImagemProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(61, 61, 61))
        );
        abaDadosPessoaisLayout.setVerticalGroup(
            abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                        .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCpf)
                            .addComponent(txfCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(abaDadosPessoaisLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblImagemProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(abaDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnVoltar)
                    .addComponent(jButton1))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        tabProdutos.addTab("Dados Produto", abaDadosPessoais);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(lblCadastroClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroClientes)
                .addGap(18, 18, 18)
                .addComponent(tabProdutos)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (txfCodBarra.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "O cpf não pode ser vazio");
            txfCodBarra.requestFocus();
            return;
        }

        if (txfDescricao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "O nome não pode ser vazio");
            txfDescricao.requestFocus();
            return;
        }

        try {
            
            if(this.imagem.getFile() == null){
                File file = new File("src/controle/venda/imagens/no-photo.jpg");
                this.imagem.setFile(new FileInputStream(file));
                this.imagem.setNome(file.getName());
            }
            
            this.imagemDao.insert(imagem);
            int id = this.imagemDao.getIdLastInsert();
            this.imagem.setId(id);
            
            
            Produto produto = new Produto();
            produto.setCodigoBarras(txfCodBarra.getText());
            produto.setDescricao(txfDescricao.getText());
            produto.setPreco(Float.parseFloat(txfPreco.getText()));
            produto.setImagem(this.imagem);
            
            
            //RepositorioCliente.obterInstancia().inserir(cliente);
            this.produtoDao.insert(produto);
            JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso");
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        txfPesquisar.setText("");

        btnPrimeiro.setEnabled(false);
        btnAnterior.setEnabled(false);
        btnProximo.setEnabled(false);
        btnUltimo.setEnabled(false);

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }

        // Habilita a Primeira Aba
        tabProdutos.setEnabledAt(0, true);

        // Desabilita a Segunda Aba
        tabProdutos.setEnabledAt(1, false);

        // Deixa a Primeira Aba Selecionada
        tabProdutos.setSelectedIndex(0);


    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tabProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabProdutosMouseClicked
        txfCodBarra.requestFocus();
    }//GEN-LAST:event_tabProdutosMouseClicked

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        btnPrimeiro.setEnabled(true);
        btnAnterior.setEnabled(true);
        btnProximo.setEnabled(true);
        btnUltimo.setEnabled(true);

        jTable1.setEnabled(true);

        try {
            DefaultTableModel modelo = new DefaultTableModel() {
                public boolean isCellEditable(int linha, int coluna) {
                    return false;// retornando false para o usuario nao poder editar nada na tabela
                }
            };
            modelo.setColumnIdentifiers(new String[]{"Cod. Barras", "Descrição", "Preço"});

            this.lista = this.produtoDao.selectAll();

            for (int i = 0; i < lista.size(); i++) {
                modelo.addRow(new Object[]{this.lista.get(i).getCodigoBarras(), this.lista.get(i).getDescricao(), "R$ " + this.lista.get(i).getPreco()});
            }
            jTable1.setModel(modelo);

        } catch (SQLException ex) {
            // Logger.getLogger(FormConsultaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jButtonNovoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoProdutoActionPerformed
        tabProdutos.setEnabledAt(1, true);
        tabProdutos.setEnabledAt(0, false);
        tabProdutos.setSelectedIndex(1);
        
        txfDescricao.setDocument(new UpperCaseDocument());
        txfCodBarra.setText("");
        txfDescricao.setText("");
    }//GEN-LAST:event_jButtonNovoProdutoActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // Habilita a Primeira Aba
        tabProdutos.setEnabledAt(0, true);

        // Desabilita a Segunda Aba
        tabProdutos.setEnabledAt(1, false);

        // Deixa a Primeira Aba Selecionada
        tabProdutos.setSelectedIndex(0);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() == -1) {
            return;
        }

        // Duplo Clique    
        if (evt.getClickCount() > 1) {
            // JOptionPane.showMessageDialog(null, "Clicou duas vezes");
            btnSalvar.setEnabled(false);

            // Habilita a Segunda Aba
            tabProdutos.setEnabledAt(1, true);

            // Desabilita a Primeira Aba
            tabProdutos.setEnabledAt(0, false);

            // Deixa a Segunda Aba Selecionada
            tabProdutos.setSelectedIndex(1);

            txfCodBarra.setEnabled(false);
            txfDescricao.requestFocus();
        }
        mostrarDadoSelecionadoTabela();
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroActionPerformed
        posicao_atual = 0;

        if (posicao_atual == 0) {
            btnPrimeiro.setEnabled(false);
            btnAnterior.setEnabled(false);
            btnProximo.setEnabled(true);
            btnUltimo.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Já está no primeiro registro!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }

        try {
            this.produtoSelecionado = this.alteraPosicao(this.posicao_atual);

            if (this.produtoSelecionado != null) {
                this.jTable1.setRowSelectionInterval(this.posicao_atual, this.posicao_atual);
                this.alteraImagem(this.produtoSelecionado);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Imagem não encontrada!", "Alerta", JOptionPane.WARNING_MESSAGE);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        mostrarDadoSelecionadoTabela();
    }//GEN-LAST:event_btnPrimeiroActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        btnProximo.setEnabled(true);
        btnUltimo.setEnabled(true);

        try {
            this.produtoSelecionado = this.alteraPosicao(--this.posicao_atual);

            if (this.produtoSelecionado != null) {
                this.jTable1.setRowSelectionInterval(this.posicao_atual, this.posicao_atual);
                this.alteraImagem(this.produtoSelecionado);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        mostrarDadoSelecionadoTabela();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    /**
     * Button Next
     *
     * @param evt
     */
    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        btnAnterior.setEnabled(true);
        btnPrimeiro.setEnabled(true);
        
        jTable1.getSelectionModel().addListSelectionListener(
    new ListSelectionListener(){   
        public void valueChanged(ListSelectionEvent e){   
            JScrollBar vertBart= jScrollPane1.getVerticalScrollBar();   
            vertBart.setValue(jTable1.getRowHeight()*jTable1.getSelectedRow());   
        }   
    }   
    );  
        
        


        try {
            this.produtoSelecionado = this.alteraPosicao(++this.posicao_atual);

            if (this.produtoSelecionado != null) {
                // System.out.println("Posição: " + this.posicao_atual);
                this.jTable1.setRowSelectionInterval(this.posicao_atual, this.posicao_atual);
                
                
                
                this.alteraImagem(this.produtoSelecionado);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Imagem não encontrada!", "Alerta", JOptionPane.WARNING_MESSAGE);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Imagem não encontrada!", "Alerta", JOptionPane.WARNING_MESSAGE);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        mostrarDadoSelecionadoTabela();
    }//GEN-LAST:event_btnProximoActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        posicao_atual = lista.size() - 1;

        if (posicao_atual == posicao_atual) {
            btnProximo.setEnabled(false);
            btnUltimo.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Já está no último registro!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }

        try {
            this.produtoSelecionado = this.alteraPosicao(this.posicao_atual);

            if (this.produtoSelecionado != null) {
                this.jTable1.setRowSelectionInterval(this.posicao_atual, this.posicao_atual);
                this.alteraImagem(this.produtoSelecionado);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        mostrarDadoSelecionadoTabela();

    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed

        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int linha, int coluna) {
                return false;// retornando false para o usuario nao poder editar nada na tabela
            }
        };

        modelo.setColumnIdentifiers(new String[]{"Cod. Barras", "Descrição", "Preço"});

        try {
            String pesquisa = this.txfPesquisar.getText();

            lista = this.produtoDao.search(pesquisa);

            for (int i = 0; i < lista.size(); i++) {
                Produto produto = lista.get(i);
                modelo.addRow(new Object[]{produto.getCodigoBarras(), produto.getDescricao(), "R$ " + produto.getPreco()});
            }

            jTable1.setModel(modelo);

        } catch (SQLException ex) {
            // Logger.getLogger(FormConsultaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        Produto produto = this.lista.get(jTable1.getSelectedRow());

        // mostra a showOptionDialog
        int choice = JOptionPane.showOptionDialog(null,
                "Deseja realmente excluir o produto " + produto.getDescricao() + "?",
                "Exclusão",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, null, null);

        // Botão SIM
        if (choice == JOptionPane.YES_OPTION) {
            try {
                this.produtoDao.remove(produto.getCodigoBarras());
                JOptionPane.showMessageDialog(null, "Produto excluído com sucesso!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Não foi possível excluir o Produto!");
                //JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        // Botão NÃO    
        } else {
            JOptionPane.showMessageDialog(null, "Operação cancelada!");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
       
        Produto produto = this.lista.get(jTable1.getSelectedRow());

        // mostra a showOptionDialog
        int choice = JOptionPane.showOptionDialog(null,
                "Deseja realmente alterar o produto " + produto.getDescricao() + "?",
                "Alteração",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, null, null);

        // Botão SIM
        if (choice == JOptionPane.YES_OPTION) {
        try {
            produtoAlterar.setCodigoBarras(txfCodBarra.getText());
            produtoAlterar.setDescricao(txfDescricao.getText());
            float value = Float.parseFloat(this.txfPreco.getText());
            produtoAlterar.setPreco(value);
            
            int id = this.imagemDao.getIdLastInsert();
            this.imagem.setId(id);
            produtoAlterar.setImagem(imagem);
            
            this.produtoDao.update(produtoAlterar);
            JOptionPane.showMessageDialog(null, "Produto alterado com sucesso!");
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        // Botão NÃO    
        } else {
            JOptionPane.showMessageDialog(null, "Operação cancelada!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        int value = fileChooser.showOpenDialog(null);

        if (value == JFileChooser.APPROVE_OPTION) {

            try {
                File file = fileChooser.getSelectedFile();
                BufferedImage img = ImageIO.read(file);
                ImageIcon imageIcon = new ImageIcon(img);
                this.lblImagemProdutos.setIcon(new ImageIcon(
                    imageIcon.getImage().getScaledInstance(
                        this.lblImagemProdutos.getWidth(),
                        this.lblImagemProdutos.getHeight(),
                        Image.SCALE_DEFAULT)));

                this.imagem.setFile(new FileInputStream(file));
                this.imagem.setNome(file.getName());

            } catch (IOException ex) {
                Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public Produto alteraPosicao(int proximaPosicao) throws SQLException, Exception {

        int totalRegistros = this.lista.size();

        if (proximaPosicao >= 0 && proximaPosicao < totalRegistros) {
            return this.lista.get(proximaPosicao);
        }

        if (proximaPosicao < 0) {
            // throw new Exception("Não já registro anterior!");
            JOptionPane.showMessageDialog(null, "Não há registro anterior!", "Alerta", JOptionPane.WARNING_MESSAGE);
            btnPrimeiro.setEnabled(false);
            btnAnterior.setEnabled(false);
            btnProximo.setEnabled(true);
            btnUltimo.setEnabled(true);
        }

        if (proximaPosicao >= totalRegistros) {
            //throw new Exception("Não há proximo registro!");
            JOptionPane.showMessageDialog(null, "Não há proximo registro!", "Alerta", JOptionPane.WARNING_MESSAGE);
            btnProximo.setEnabled(false);
            btnUltimo.setEnabled(false);
            btnAnterior.setEnabled(true);
            btnPrimeiro.setEnabled(true);
        }

        return null;
    }

    private void mostrarDadoSelecionadoTabela() {
        int index = this.jTable1.getSelectedRow();

        this.produtoSelecionado = this.lista.get(index);
        this.posicao_atual = index;

        if (jTable1.getSelectedRow() != -1) {

            this.produtoSelecionado = this.lista.get(jTable1.getSelectedRow());
            txfCodBarra.setText(produtoSelecionado.getCodigoBarras());
            txfDescricao.setText(produtoSelecionado.getDescricao());
            txfPreco.setText(String.valueOf(produtoSelecionado.getPreco()));
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um registro!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public void alteraImagem(Produto produto) throws IOException, SQLException {
        File file = null;
        BufferedImage img = null;
        ImageIcon imageIcon = null;

        if (produto.getImagem().getId() == 0) {
            file = new File("src/controle/venda/imagens/semfoto.JPG");
            if(file.isFile()){
                imageIcon = new ImageIcon("src/controle/venda/imagens/semfoto.JPG");
            }
        } else if (produto.getImagem().getId() > 0) {
            Imagem imagem = this.imagemDao.selectOne(produto.getImagem().getId());
            Blob blob = imagem.getBlob();
            imageIcon = new ImageIcon(blob.getBytes(1, (int) blob.length()));
        }

        this.lblImagemGravada.setIcon(new ImageIcon(
                imageIcon.getImage().getScaledInstance(
                        this.lblImagemGravada.getWidth(),
                        this.lblImagemGravada.getHeight(),
                        Image.SCALE_DEFAULT)));

        this.produtoSelecionado = null;
    }

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroProdutos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abaDadosPessoais;
    private javax.swing.JPanel abaPesquisa;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JButton btnPrimeiro;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JButton jButtonNovoProduto;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCadastroClientes;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblImagemGravada;
    private javax.swing.JLabel lblImagemProdutos;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTabbedPane tabProdutos;
    private javax.swing.JTextField txfCodBarra;
    private javax.swing.JTextField txfDescricao;
    private javax.swing.JTextField txfPesquisar;
    private javax.swing.JTextField txfPreco;
    // End of variables declaration//GEN-END:variables

}
